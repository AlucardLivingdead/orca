The Orca Braille Subsystem

The Orca Braille subsystem uses BRLTTY to produce Braille and be
notified of events on the Braille display.  It currently sends strings
to the display as text and not dots - this would need to be changed to
do dot conversion (or preferrably use another subsystem such as the
forthcoming gnome-braille to do this).

The Orca Braille subsystem is focused on providing a flexible means
for displaying and referring to currently displayed data on the
Braille display.  The Braille display is exposed to the client as a
virtual display of arbitrary length.  This virtual display can be
split into any number of regions.  Each region occupies a specific
amount of the virtual display, but the text it contains can be of any
length.  This design allows the physical display to be scrolled around
the virtual display.

Initialization and Shutdown
==========
The Braille module must be initialized by calling the init function
before being used.  It must be shutdown to free the resources being
used by calling the shutdown function.

Clear:
==========
The virtual display is cleared by calling clear.  Note that this does
not refresh the physical display.

refresh
==========
The contents of the virtual display are posted to the physical display
by calling the refresh function.

Adding and removing regions
==========
A region can be added to the virtual display with the addRegion
function.  This function takes three arguments:

* The text to display in the region
* The amount of physical display space that the region should occupy
* The offset within the text where displaying should begin

The number of the new region is returned.

Regions can be removed by calling the removeRegion function and
specifying the number of the region to remove.

Updating an existing region
==========
The updateRegion function can be called to update an existing region.
The first argument is the number of the region to update, the second
is the new text, and the third is the offset within the text at which
to start displaying.

Positioning the Cursor
==========
The setCursor function can be used to position the cursor on the
Braille display.  It takes the region number and the cursor position
(0-based) relative to the beginning of the region's text.

Scrolling
==========
the setScrollRegion function is used to determine which region is
scrolled by the advance keys.  Note that when a scroll region is set,
the client receives no notifications when the region is scrolled.
When no scroll region is set, the client receives notifications when
the advance keys are pressed.

Callbacks
==========
The registerCallback function lets the client register a callback
function to be called when a braille key is pressed.  The Braille key
callback function takes the region number and the offset where the
button was located.
